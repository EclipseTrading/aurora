<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sf="http://schemas.syncfusion.com/wpf"
                    xmlns:sdc="clr-namespace:Aurora.SyncfusionDockingContainer"
                    xmlns:controls="clr-namespace:Aurora.Controls;assembly=Aurora.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Syncfusion.Tools.Wpf;component/framework/dockingmanager/themes/metrostyle.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Syncfusion.Tools.Wpf;component/controls/tabcontrolext/themes/metrostyle.xaml"/>
        <ResourceDictionary Source="CommonStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="DockHeaderPresenterTemplate" TargetType="{x:Type sf:DockHeaderPresenter}">
        <Border x:Name="borderTop" Width="Auto" Height="Auto" BorderThickness="1">
            <FrameworkElement.ContextMenu>
                <sf:CustomContextMenu Name="PART_ContextMenu" Focusable="false"/>
            </FrameworkElement.ContextMenu>
            <Grid>
                <DockPanel LastChildFill="true" Height="22">
                    <Grid DockPanel.Dock="Right">
                        <Rectangle Fill="{Binding  Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ButtonAreaBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <ItemsControl x:Name="TitleBarControls" ItemsSource="{Binding  Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).TitleBarControls, RelativeSource={RelativeSource TemplatedParent}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <ToggleButton Name="PART_MinimizeButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                                                  Visibility="Collapsed" Command="sf:DockHeaderPresenter.MinimizeStateCommand"
                                                  Template="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.MinimizeButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                                <FrameworkElement.ToolTip>
                                    <ToolTip Name="PART_MinimizeButtonTooltip">
                                        <TextBlock Name="PART_MinimizeButtonTooltipText" Text="Minimize"/>
                                    </ToolTip>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_RestoreButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                                                  Visibility="Collapsed" Command="sf:DockHeaderPresenter.RestoreStateCommand"
                                                  Template="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.RestoreButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                                <FrameworkElement.ToolTip>
                                    <ToolTip Name="PART_RestoreButtonTooltip">
                                        <TextBlock Name="PART_RestoreButtonTooltipText" Text="Restore"/>
                                    </ToolTip>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_MaximizeButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                                      Visibility="Collapsed" Command="sf:DockHeaderPresenter.MaximizeStateCommand"
                                      Template="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.MaximizeButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                                <FrameworkElement.ToolTip>
                                    <ToolTip Name="PART_MaximizeButtonTooltip">
                                        <TextBlock Name="PART_MaximizeButtonTooltipText" Text="Maximize"/>
                                    </ToolTip>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_ContextMenuButton" Focusable="false" VerticalAlignment="Center"
                                                  AutomationProperties.Name="WindowMenu"
                                                  Command="sf:DockHeaderPresenter.OpenContextMenuCommand"
                                                  IsChecked="{Binding Path=IsContextMenuOpen, RelativeSource={RelativeSource AncestorType={x:Type sf:DockHeaderPresenter}}}"
                                                  Template="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.MenuButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                                <FrameworkElement.ToolTip>
                                    <ToolTip Name="PART_ContextMenuButtonTooltip">
                                        <TextBlock Name="PART_ContextMenuButtonTooltipText" Text="Context Menu"/>
                                    </ToolTip>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_AwlButton" Focusable="false" VerticalAlignment="Center"
                                      AutomationProperties.Name="AutoHide" Command="sf:DockHeaderPresenter.ChangeAwlStateCommand"
                                      Template="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.AwlButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                                <FrameworkElement.ToolTip>
                                    <ToolTip Name="PART_AwlButtonTooltip">
                                        <TextBlock Name="PART_AwlButtonTooltipText" Text="Pin View"/>
                                    </ToolTip>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_CloseButton" Focusable="false" VerticalAlignment="Center" Command="sf:DockHeaderPresenter.CloseCommand" Margin="0,0,0,0"
                                      Template="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.CloseButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                                <FrameworkElement.ToolTip>
                                    <ToolTip Name="tooltip">
                                        <TextBlock Name="PART_CloseButtonTooltipText" Text="Close"/>
                                    </ToolTip>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>
                        </StackPanel>
                    </Grid>

                    <controls:TitleBarMenu x:Name="Menu" DockPanel.Dock="Left" sf:WindowChrome.IsHitTestVisibleInChrome="True" 
                                            Content="{Binding Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings), RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{StaticResource Menu}"
                                            IsTab="False"
                                            IsActive="False"
                                            IsSelected="{Binding Path=IsFocused, RelativeSource={RelativeSource TemplatedParent}}"/>

                    <ContentPresenter Name="PART_ContentPresenter" IsHitTestVisible="true" Margin="0, 0, 0, 0" VerticalAlignment="Center"
                                                  MaxHeight="22"
                                              Content="{Binding Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).HeaderContent, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplate="{Binding Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                </DockPanel>
                <Border Name="CoverletControl" Visibility="Collapsed" Background="Transparent"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Value="false" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMaximizeMenuItem" Value="false"/>
            </DataTrigger>
            <DataTrigger Value="false" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMinimizeMenuItem" Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}">
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMaximizeMenuItem" Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}">
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMinimizeMenuItem" Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="false"/>
                    <Condition Binding="{Binding Path=MaximizeButtonMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="Disable"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="true"/>
                    <Condition Binding="{Binding Path=MaximizeButtonMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="Disable"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMaximizeMenuItem" Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMinimizeMenuItem" Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMaximizeMenuItem" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledMinimizeMenuItem" Value="false"/>
            </MultiDataTrigger>
            <DataTrigger Value="Collapsed" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="Visible" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
            </DataTrigger>
            <DataTrigger Value="Float" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledAutoHideMenuItem" Value="false"/>
            </DataTrigger>
            <DataTrigger Value="AutoHidden" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="10" CenterY="10"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="AutoHidden"/>
                    <Condition Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="17.5" CenterY="17.5"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledHiddenMenuItem" Value="false"/>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanFloat), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledFloatingMenuItem" Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanDock), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledAutoHideMenuItem" Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanDocument), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledTabbedMenuItem" Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledHiddenMenuItem" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="CloseActive"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledHiddenMenuItem" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="CloseAll"/>
                    <Condition Binding="{Binding Path=CanCloseGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockedElementTabbedHost}}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledHiddenMenuItem" Value="false"/>
            </MultiDataTrigger>
            <DataTrigger Value="False" Binding="{Binding Path=AutoHideVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockingManager}}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledAutoHideMenuItem" Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CoverletControl" Property="UIElement.Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledAutoHideMenuItem" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledAutoHideMenuItem" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=AutoHideTabsMode, RelativeSource={RelativeSource AncestorType={x:Type sf:DockingManager}}}" Value="AutoHideGroup"/>
                    <Condition Binding="{Binding Path=CanAutoHideGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockedElementTabbedHost}}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledHiddenMenuItem" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(sf:DockingManager.InternalDataContext).(sf:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="sf:CustomContextMenu.IsEnabledAutoHideMenuItem" Value="false"/>
            </MultiDataTrigger>
            <Trigger Property="UIElement.Visibility" Value="Collapsed">
                <Setter TargetName="PART_ContentPresenter" Value="{x:Null}" Property="ContentPresenter.Content"/>
            </Trigger>
            <Trigger SourceName="borderTop" Property="UIElement.Visibility" Value="Visible">
                <Setter TargetName="PART_ContentPresenter" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}" Property="TextBlock.Foreground"/>
                <Setter TargetName="PART_ContentPresenter" Value="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).InactiveForeground}" Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).InactiveBackground}" Property="Border.Background"/>
                <Setter TargetName="borderTop" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderBrush"/>
                <Setter TargetName="borderTop" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderThickness"/>
                <Setter TargetName="PART_AwlButton" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}" Property="Control.Foreground"/>
                <Setter TargetName="PART_ContextMenuButton" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}" Property="Control.Foreground"/>
                <Setter TargetName="PART_CloseButton" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}" Property="Control.Foreground"/>
            </Trigger>
            <DataTrigger Value="True" Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="Menu" Property="controls:MenuProperties.IsActive" Value="True"/>
                <Setter TargetName="PART_ContentPresenter" Value="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveForeground}" Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveBackground}" Property="Border.Background"/>
                <Setter TargetName="PART_AwlButton" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}" Property="Control.Foreground"/>
                <Setter TargetName="PART_ContextMenuButton" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}"  Property="Control.Foreground"/>
                <Setter TargetName="PART_CloseButton" Value="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}" Property="Control.Foreground"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.EnableMouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ContentPresenter" Value="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveForeground}" Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveBackground}" Property="Border.Background"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type sf:DockedElementTabbedHost}}}" Value="True"/>
                    <Condition Binding="{Binding Path=(sf:DockingManager.DockingManager).(sf:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ContentPresenter" Value="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveForeground}" Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveBackground}" Property="Border.Background"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="DockHeaderStyle" TargetType="sf:DockHeaderPresenter">
        <Setter Property="Template" Value="{StaticResource DockHeaderPresenterTemplate}"/>
    </Style>

    <Style x:Key="DockedElementTabHostStyle" TargetType="{x:Type sf:DockedElementTabbedHost}" BasedOn="{StaticResource MetroDockedElementTabbedHostStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sf:DockedElementTabbedHost}">
                    <Border x:Name="BorderWrap" Width="Auto" SnapsToDevicePixels="true" 
                                    Background="Transparent" 
                                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).InactiveWindowBorder}"
                                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).InactiveWindowBorderThickness}"
                                    FocusVisualStyle="{Binding Path=(sf:DockedElementTabbedHost.DockingManager).(sf:DockingManager.FocusVisualStyle), RelativeSource={RelativeSource AncestorType={x:Type sf:DockedElementTabbedHost}}}">
                        <DockPanel x:Name="DockPanel" Width="Auto" LastChildFill="true" Focusable="false">
                            <sf:DockHeaderPresenter x:Name="header" DockPanel.Dock="Top" RenderTransformOrigin="0.5,0.5"
                                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                                              Style="{Binding Path=(sf:DockedElementTabbedHost.DockingManager).(sf:DockingManager.DockHeaderStyle), RelativeSource={RelativeSource AncestorType={x:Type sf:DockedElementTabbedHost}}}"/>
                            <Grid>
                                <ContentPresenter Name="HostedElement" ClipToBounds="true" ContentSource="HostedElement"
                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                                <Border Name="PART_CoverletControl" Visibility="Collapsed" Background="Transparent"/>
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True" Binding="{Binding Path=(sf:DockedElementTabbedHost.HostedElement).(sf:DockingManager.NoHeader), RelativeSource={RelativeSource Self}}">
                            <Setter TargetName="header" Property="UIElement.Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Value="True" Binding="{Binding Path=(sf:DockedElementTabbedHost.DockingManager).(sf:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}">
                            <Setter TargetName="PART_CoverletControl" Property="UIElement.Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="sf:DockedElementTabbedHost.MarkAsFrozen" Value="true">
                            <Setter TargetName="PART_CoverletControl" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="HostedElement" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger SourceName="BorderWrap" Property="UIElement.Visibility" Value="Visible">
                            <Setter TargetName="BorderWrap" Value="{Binding Path=(sf:DockedElementTabbedHost.DockingManager).(sf:DockingManager.ElementBorderThickness), RelativeSource={RelativeSource AncestorType={x:Type sf:DockedElementTabbedHost}}}" 
                                            Property="Border.BorderThickness"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="BorderWrap" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveWindowBorder}"/>
                            <Setter TargetName="BorderWrap" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(sf:DockingManager.InternalDataContext).(sdc:AuroraProperties.TitleBarSettings).ActiveWindowBorderThickness}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=sf:NativeFloatWindow}, Converter={sdc:IsNullConverter}}" Value="False">
                            <Setter TargetName="BorderWrap" Property="BorderThickness" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>